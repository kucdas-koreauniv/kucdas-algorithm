1. 수식(문자열)을 입력받는다

2. 문자열을 순회하면서 중복되는 괄호를 제거한다. 
*[함수1]: 어떤 열린괄호에 대응하는 닫힌 괄호의 인덱스를 반환.
*[제거]: 특정 인덱스에 있는 문자를 지우고, 특정 인덱스를 기준으로 한칸씩 왼쪽으로 밂.

(A), (B)와 같이 단일 문자가 괄호가 둘러싸인 경우. 
=> (닫힌 괄호 인덱스 - [함수 1]의 값) == 2인 경우, 해당 열린괄호-닫힌괄호 [제거] -> 인덱스가 한칸씩 왼쪽으로 밀리게 되므로, 순회인덱스 += 1 하지 않고 이어서 순회 시작.

((A + B))와 같이 괄호가 하나의 피연산자 단위(괄호 단위 혹은 단일 문자)를 중복으로 둘러싼 경우. 
=> 이웃하는 열린 괄호 각각에 대응하는 [함수1] 값의 차 == 1인 경우, 해당 (바깥쪽의) 열린괄호-닫힌괄호 [제거] -> 인덱스가 한칸씩 왼쪽으로 밀리게 되므로, 순회인덱스 += 1 하지 않고 이어서 순회 시작.


3. * / 연산자 양쪽 2개의 피연산자를 괄호로 묶는다.
*[함수2]: 연산자 기준으로 왼쪽 피연산자의 가장 왼쪽 인덱스를 반환.
*[함수3]: 연산자 기준으로 오른쪽 피연산자의 가장 오른쪽 인덱스를 반환.
*[삽입]: 어떤 문자열의 특정 인덱스를 기점으로 오른쪽으로 한칸 씩 밀고, 그 인덱스에 문자 삽입. 

=> * / 기준으로  [함수2]가 반환한 인덱스에 '(' [삽입], [함수3]가 반환한 인덱스에 ')' [삽입] -> 인덱스가 한칸씩 오른쪽으로 밀리므로, 추가로 순회인덱스 += 1 해줘야함.

4. + - 연산 양쪽 2개의 피연산자를 괄호로 묶는다.

=> + - 기준으로 [함수2]가 반환한 인덱스에 '(' [삽입], [함수3]가 반환한 인덱스에 ')' [삽입] -> 인덱스가 한칸씩 오른쪽으로 밀리므로, 추가로 순회인덱스 += 1 해줘야함.


5. 완성된 수식(문자열) 차례로 순회하기
문자라면, 바로 출력,
연산자라면, 스택에 푸시,
닫힌 괄호라면, 연산자를 스택에서 팝하고 출력한다.
